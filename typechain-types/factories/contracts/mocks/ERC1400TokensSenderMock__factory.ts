/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC1400TokensSenderMock,
  ERC1400TokensSenderMockInterface,
} from "../../../contracts/mocks/ERC1400TokensSenderMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "canTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensToTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506100596040518060400160405280601381526020017f45524331343030546f6b656e7353656e6465720000000000000000000000000081525061005e60201b61021f1760201c565b610143565b600160008083604051602001610074919061012c565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600081519050919050565b600081905092915050565b60005b838110156100e65780820151818401526020810190506100cb565b838111156100f5576000848401525b50505050565b6000610106826100b2565b61011081856100bd565b93506101208185602086016100c8565b80840191505092915050565b600061013882846100fb565b915081905092915050565b61075d806101526000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063249cb3fa146100465780634e755a5414610076578063e8a24c6a14610092575b600080fd5b610060600480360381019061005b9190610365565b6100c2565b60405161006d91906103b4565b60405180910390f35b610090600480360381019061008b919061046a565b610120565b005b6100ac60048036038101906100a7919061046a565b6101bc565b6040516100b9919061059d565b60405180910390f35b600080600084815260200190815260200160002060009054906101000a900460ff1615610115576040516020016100f89061060f565b60405160208183030381529060405280519060200120905061011a565b600090505b92915050565b61017087878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610273565b6101af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a690610681565b60405180910390fd5b5050505050505050505050565b600061020e88888888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610273565b90509b9a5050505050505050505050565b6001600080836040516020016102359190610710565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000807f110000000000000000000000000000000000000000000000000000000000000060001b9050600060208401519050818114156102b8576000925050506102bf565b6001925050505b949350505050565b600080fd5b600080fd5b6000819050919050565b6102e4816102d1565b81146102ef57600080fd5b50565b600081359050610301816102db565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061033282610307565b9050919050565b61034281610327565b811461034d57600080fd5b50565b60008135905061035f81610339565b92915050565b6000806040838503121561037c5761037b6102c7565b5b600061038a858286016102f2565b925050602061039b85828601610350565b9150509250929050565b6103ae816102d1565b82525050565b60006020820190506103c960008301846103a5565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126103f4576103f36103cf565b5b8235905067ffffffffffffffff811115610411576104106103d4565b5b60208301915083600182028301111561042d5761042c6103d9565b5b9250929050565b6000819050919050565b61044781610434565b811461045257600080fd5b50565b6000813590506104648161043e565b92915050565b60008060008060008060008060008060006101008c8e0312156104905761048f6102c7565b5b60008c013567ffffffffffffffff8111156104ae576104ad6102cc565b5b6104ba8e828f016103de565b9b509b505060206104cd8e828f016102f2565b99505060406104de8e828f01610350565b98505060606104ef8e828f01610350565b97505060806105008e828f01610350565b96505060a06105118e828f01610455565b95505060c08c013567ffffffffffffffff811115610532576105316102cc565b5b61053e8e828f016103de565b945094505060e08c013567ffffffffffffffff811115610561576105606102cc565b5b61056d8e828f016103de565b92509250509295989b509295989b9093969950565b60008115159050919050565b61059781610582565b82525050565b60006020820190506105b2600083018461058e565b92915050565b600081905092915050565b7f455243313832305f4143434550545f4d41474943000000000000000000000000600082015250565b60006105f96014836105b8565b9150610604826105c3565b601482019050919050565b600061061a826105ec565b9150819050919050565b600082825260208201905092915050565b7f3536000000000000000000000000000000000000000000000000000000000000600082015250565b600061066b600283610624565b915061067682610635565b602082019050919050565b6000602082019050818103600083015261069a8161065e565b9050919050565b600081519050919050565b60005b838110156106ca5780820151818401526020810190506106af565b838111156106d9576000848401525b50505050565b60006106ea826106a1565b6106f481856105b8565b93506107048185602086016106ac565b80840191505092915050565b600061071c82846106df565b91508190509291505056fea264697066735822122004d88cbb5a270588ec56f314de32b1f40c2a52f8597d55f87ac8f803be33f28464736f6c63430008090033";

type ERC1400TokensSenderMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1400TokensSenderMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1400TokensSenderMock__factory extends ContractFactory {
  constructor(...args: ERC1400TokensSenderMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1400TokensSenderMock> {
    return super.deploy(overrides || {}) as Promise<ERC1400TokensSenderMock>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1400TokensSenderMock {
    return super.attach(address) as ERC1400TokensSenderMock;
  }
  override connect(signer: Signer): ERC1400TokensSenderMock__factory {
    return super.connect(signer) as ERC1400TokensSenderMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1400TokensSenderMockInterface {
    return new utils.Interface(_abi) as ERC1400TokensSenderMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1400TokensSenderMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1400TokensSenderMock;
  }
}

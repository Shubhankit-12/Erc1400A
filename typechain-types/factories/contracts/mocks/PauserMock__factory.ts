/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PauserMock,
  PauserMockInterface,
} from "../../../contracts/mocks/PauserMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "mockActivated",
        type: "bool",
      },
    ],
    name: "mockFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ce238038062000ce28339818101604052810190620000379190620002ed565b6200004981336200005060201b60201c565b506200043a565b620000a7816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206200010560201b620001dc1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fe0953c403a52f9dc1fef4202a8d33975c958b727bee0d7b5b328965ddad98d8160405160405180910390a35050565b620001178282620001b860201b60201c565b156200015a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001519062000380565b60405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200022c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002239062000418565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002b58262000288565b9050919050565b620002c781620002a8565b8114620002d357600080fd5b50565b600081519050620002e781620002bc565b92915050565b60006020828403121562000306576200030562000283565b5b60006200031684828501620002d6565b91505092915050565b600082825260208201905092915050565b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b600062000368601f836200031f565b9150620003758262000330565b602082019050919050565b600060208201905081810360008301526200039b8162000359565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000620004006022836200031f565b91506200040d82620003a2565b604082019050919050565b600060208201905081810360008301526200043381620003f1565b9050919050565b610898806200044a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632fd333981461005c57806341eb24bb1461008c5780636c41d4ea146100a8578063eb5314bd146100c4578063ed2f9095146100e0575b600080fd5b610076600480360381019061007191906105b2565b6100fc565b604051610083919061060d565b60405180910390f35b6100a660048036038101906100a19190610628565b610156565b005b6100c260048036038101906100bd9190610681565b610163565b005b6100de60048036038101906100d991906105b2565b610196565b005b6100fa60048036038101906100f591906105b2565b6101b9565b005b600061014e826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061028490919063ffffffff16565b905092915050565b610160813361034c565b50565b8161016e81336100fc565b61017757600080fd5b81600160006101000a81548160ff021916908315150217905550505050565b816101a181336100fc565b6101aa57600080fd5b6101b483836103fa565b505050565b816101c481336100fc565b6101cd57600080fd5b6101d7838361034c565b505050565b6101e68282610284565b15610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d9061071e565b60405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ec906107b0565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61039c816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206104a890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fb75903ade4a0fdb07d60c882c22c779e2e1c751883c37aecdcc92a8ec72b046e60405160405180910390a35050565b61044a816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206101dc90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fe0953c403a52f9dc1fef4202a8d33975c958b727bee0d7b5b328965ddad98d8160405160405180910390a35050565b6104b28282610284565b6104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890610842565b60405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061057f82610554565b9050919050565b61058f81610574565b811461059a57600080fd5b50565b6000813590506105ac81610586565b92915050565b600080604083850312156105c9576105c861054f565b5b60006105d78582860161059d565b92505060206105e88582860161059d565b9150509250929050565b60008115159050919050565b610607816105f2565b82525050565b600060208201905061062260008301846105fe565b92915050565b60006020828403121561063e5761063d61054f565b5b600061064c8482850161059d565b91505092915050565b61065e816105f2565b811461066957600080fd5b50565b60008135905061067b81610655565b92915050565b600080604083850312156106985761069761054f565b5b60006106a68582860161059d565b92505060206106b78582860161066c565b9150509250929050565b600082825260208201905092915050565b7f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500600082015250565b6000610708601f836106c1565b9150610713826106d2565b602082019050919050565b60006020820190508181036000830152610737816106fb565b9050919050565b7f526f6c65733a206163636f756e7420697320746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061079a6022836106c1565b91506107a58261073e565b604082019050919050565b600060208201905081810360008301526107c98161078d565b9050919050565b7f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b600061082c6021836106c1565b9150610837826107d0565b604082019050919050565b6000602082019050818103600083015261085b8161081f565b905091905056fea26469706673582212208c22181c91b34f2747ff79131137a6cb288ebd9ad5671cdafe1d581161b3ef5764736f6c63430008090033";

type PauserMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PauserMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PauserMock__factory extends ContractFactory {
  constructor(...args: PauserMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PauserMock> {
    return super.deploy(token, overrides || {}) as Promise<PauserMock>;
  }
  override getDeployTransaction(
    token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  override attach(address: string): PauserMock {
    return super.attach(address) as PauserMock;
  }
  override connect(signer: Signer): PauserMock__factory {
    return super.connect(signer) as PauserMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PauserMockInterface {
    return new utils.Interface(_abi) as PauserMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PauserMock {
    return new Contract(address, _abi, signerOrProvider) as PauserMock;
  }
}

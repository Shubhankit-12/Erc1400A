/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface BatchReaderInterface extends utils.Interface {
  functions: {
    "batchAllowlisted(address[],address[])": FunctionFragment;
    "batchBalanceOf(address[],address[])": FunctionFragment;
    "batchBalanceOfByPartition(address[],address[])": FunctionFragment;
    "batchBlocklisted(address[],address[])": FunctionFragment;
    "batchControllers(address[])": FunctionFragment;
    "batchDefaultPartitions(address[])": FunctionFragment;
    "batchERC1400Balances(address[],address[])": FunctionFragment;
    "batchERC20Balances(address[],address[])": FunctionFragment;
    "batchERC721Balances(address[],address[])": FunctionFragment;
    "batchEthBalance(address[])": FunctionFragment;
    "batchExtensionControllers(address[])": FunctionFragment;
    "batchSpendableBalanceOfByPartition(address[],address[])": FunctionFragment;
    "batchTokenExtensionSetup(address[])": FunctionFragment;
    "batchTokenExtensionSetup1(address[])": FunctionFragment;
    "batchTokenExtensionSetup2(address[])": FunctionFragment;
    "batchTokenRolesInfos(address[])": FunctionFragment;
    "batchTokenSuppliesInfos(address[])": FunctionFragment;
    "batchTotalPartitions(address[])": FunctionFragment;
    "batchValidations(address[],address[])": FunctionFragment;
    "canImplementInterfaceForAddress(bytes32,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "batchAllowlisted"
      | "batchBalanceOf"
      | "batchBalanceOfByPartition"
      | "batchBlocklisted"
      | "batchControllers"
      | "batchDefaultPartitions"
      | "batchERC1400Balances"
      | "batchERC20Balances"
      | "batchERC721Balances"
      | "batchEthBalance"
      | "batchExtensionControllers"
      | "batchSpendableBalanceOfByPartition"
      | "batchTokenExtensionSetup"
      | "batchTokenExtensionSetup1"
      | "batchTokenExtensionSetup2"
      | "batchTokenRolesInfos"
      | "batchTokenSuppliesInfos"
      | "batchTotalPartitions"
      | "batchValidations"
      | "canImplementInterfaceForAddress"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "batchAllowlisted",
    values: [PromiseOrValue<string>[], PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchBalanceOf",
    values: [PromiseOrValue<string>[], PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchBalanceOfByPartition",
    values: [PromiseOrValue<string>[], PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchBlocklisted",
    values: [PromiseOrValue<string>[], PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchControllers",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchDefaultPartitions",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchERC1400Balances",
    values: [PromiseOrValue<string>[], PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchERC20Balances",
    values: [PromiseOrValue<string>[], PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchERC721Balances",
    values: [PromiseOrValue<string>[], PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchEthBalance",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchExtensionControllers",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchSpendableBalanceOfByPartition",
    values: [PromiseOrValue<string>[], PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchTokenExtensionSetup",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchTokenExtensionSetup1",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchTokenExtensionSetup2",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchTokenRolesInfos",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchTokenSuppliesInfos",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchTotalPartitions",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchValidations",
    values: [PromiseOrValue<string>[], PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "canImplementInterfaceForAddress",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "batchAllowlisted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchBalanceOf",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchBalanceOfByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchBlocklisted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchControllers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchDefaultPartitions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchERC1400Balances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchERC20Balances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchERC721Balances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchEthBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchExtensionControllers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchSpendableBalanceOfByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchTokenExtensionSetup",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchTokenExtensionSetup1",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchTokenExtensionSetup2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchTokenRolesInfos",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchTokenSuppliesInfos",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchTotalPartitions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchValidations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canImplementInterfaceForAddress",
    data: BytesLike
  ): Result;

  events: {};
}

export interface BatchReader extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BatchReaderInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    batchAllowlisted(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[boolean[]]>;

    batchBalanceOf(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    batchBalanceOfByPartition(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], string[], BigNumber[]]>;

    batchBlocklisted(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[boolean[]]>;

    batchControllers(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], string[]]>;

    batchDefaultPartitions(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], string[]]>;

    batchERC1400Balances(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber[],
        BigNumber[],
        BigNumber[],
        string[],
        BigNumber[],
        BigNumber[]
      ]
    >;

    batchERC20Balances(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], BigNumber[]]>;

    batchERC721Balances(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], BigNumber[][][]]>;

    batchEthBalance(
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    batchExtensionControllers(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], string[]]>;

    batchSpendableBalanceOfByPartition(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], string[], BigNumber[]]>;

    batchTokenExtensionSetup(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<
      [string[], number[], boolean[], boolean[], boolean[], boolean[]]
    >;

    batchTokenExtensionSetup1(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[string[], number[], boolean[], boolean[]]>;

    batchTokenExtensionSetup2(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[boolean[], boolean[]]>;

    batchTokenRolesInfos(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[string[], BigNumber[], string[], BigNumber[], string[]]>;

    batchTokenSuppliesInfos(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], BigNumber[], string[], BigNumber[], BigNumber[], string[]]
    >;

    batchTotalPartitions(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], string[], BigNumber[]]>;

    batchValidations(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[boolean[], boolean[]]>;

    canImplementInterfaceForAddress(
      interfaceHash: PromiseOrValue<BytesLike>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  batchAllowlisted(
    tokens: PromiseOrValue<string>[],
    tokenHolders: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<boolean[]>;

  batchBalanceOf(
    tokens: PromiseOrValue<string>[],
    tokenHolders: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  batchBalanceOfByPartition(
    tokens: PromiseOrValue<string>[],
    tokenHolders: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[BigNumber[], string[], BigNumber[]]>;

  batchBlocklisted(
    tokens: PromiseOrValue<string>[],
    tokenHolders: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<boolean[]>;

  batchControllers(
    tokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[BigNumber[], string[]]>;

  batchDefaultPartitions(
    tokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[BigNumber[], string[]]>;

  batchERC1400Balances(
    tokens: PromiseOrValue<string>[],
    tokenHolders: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<
    [BigNumber[], BigNumber[], BigNumber[], string[], BigNumber[], BigNumber[]]
  >;

  batchERC20Balances(
    tokens: PromiseOrValue<string>[],
    tokenHolders: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[BigNumber[], BigNumber[]]>;

  batchERC721Balances(
    tokens: PromiseOrValue<string>[],
    tokenHolders: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[BigNumber[], BigNumber[][][]]>;

  batchEthBalance(
    tokenHolders: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  batchExtensionControllers(
    tokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[BigNumber[], string[]]>;

  batchSpendableBalanceOfByPartition(
    tokens: PromiseOrValue<string>[],
    tokenHolders: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[BigNumber[], string[], BigNumber[]]>;

  batchTokenExtensionSetup(
    tokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[string[], number[], boolean[], boolean[], boolean[], boolean[]]>;

  batchTokenExtensionSetup1(
    tokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[string[], number[], boolean[], boolean[]]>;

  batchTokenExtensionSetup2(
    tokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[boolean[], boolean[]]>;

  batchTokenRolesInfos(
    tokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[string[], BigNumber[], string[], BigNumber[], string[]]>;

  batchTokenSuppliesInfos(
    tokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<
    [BigNumber[], BigNumber[], string[], BigNumber[], BigNumber[], string[]]
  >;

  batchTotalPartitions(
    tokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[BigNumber[], string[], BigNumber[]]>;

  batchValidations(
    tokens: PromiseOrValue<string>[],
    tokenHolders: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<[boolean[], boolean[]]>;

  canImplementInterfaceForAddress(
    interfaceHash: PromiseOrValue<BytesLike>,
    arg1: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    batchAllowlisted(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<boolean[]>;

    batchBalanceOf(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    batchBalanceOfByPartition(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], string[], BigNumber[]]>;

    batchBlocklisted(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<boolean[]>;

    batchControllers(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], string[]]>;

    batchDefaultPartitions(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], string[]]>;

    batchERC1400Balances(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber[],
        BigNumber[],
        BigNumber[],
        string[],
        BigNumber[],
        BigNumber[]
      ]
    >;

    batchERC20Balances(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], BigNumber[]]>;

    batchERC721Balances(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], BigNumber[][][]]>;

    batchEthBalance(
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    batchExtensionControllers(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], string[]]>;

    batchSpendableBalanceOfByPartition(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], string[], BigNumber[]]>;

    batchTokenExtensionSetup(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<
      [string[], number[], boolean[], boolean[], boolean[], boolean[]]
    >;

    batchTokenExtensionSetup1(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[string[], number[], boolean[], boolean[]]>;

    batchTokenExtensionSetup2(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[boolean[], boolean[]]>;

    batchTokenRolesInfos(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[string[], BigNumber[], string[], BigNumber[], string[]]>;

    batchTokenSuppliesInfos(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], BigNumber[], string[], BigNumber[], BigNumber[], string[]]
    >;

    batchTotalPartitions(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[], string[], BigNumber[]]>;

    batchValidations(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[boolean[], boolean[]]>;

    canImplementInterfaceForAddress(
      interfaceHash: PromiseOrValue<BytesLike>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    batchAllowlisted(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchBalanceOf(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchBalanceOfByPartition(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchBlocklisted(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchControllers(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchDefaultPartitions(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchERC1400Balances(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchERC20Balances(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchERC721Balances(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchEthBalance(
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchExtensionControllers(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchSpendableBalanceOfByPartition(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchTokenExtensionSetup(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchTokenExtensionSetup1(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchTokenExtensionSetup2(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchTokenRolesInfos(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchTokenSuppliesInfos(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchTotalPartitions(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchValidations(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    canImplementInterfaceForAddress(
      interfaceHash: PromiseOrValue<BytesLike>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    batchAllowlisted(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchBalanceOf(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchBalanceOfByPartition(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchBlocklisted(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchControllers(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchDefaultPartitions(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchERC1400Balances(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchERC20Balances(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchERC721Balances(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchEthBalance(
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchExtensionControllers(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchSpendableBalanceOfByPartition(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchTokenExtensionSetup(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchTokenExtensionSetup1(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchTokenExtensionSetup2(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchTokenRolesInfos(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchTokenSuppliesInfos(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchTotalPartitions(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchValidations(
      tokens: PromiseOrValue<string>[],
      tokenHolders: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    canImplementInterfaceForAddress(
      interfaceHash: PromiseOrValue<BytesLike>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
